name: Test & Deploy Angular + Terraform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: Build & Test Angular
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v3

      - name: Instalar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Instalar Dependências
        run: npm install

      - name: Compilar Aplicação Angular
        run: npm run build -- --configuration=production

      - name: Rodar Testes Unitários
        run: npm run test:coverage -- --watch=false --browsers=ChromeHeadless

      - name: Salvar Build Angular
        uses: actions/upload-artifact@v3
        with:
          name: angular-dist
          path: dist/

  terraform:
    name: Deploy Infra e App na AWS
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v3

      - name: Baixar Build Angular
        uses: actions/download-artifact@v3
        with:
          name: angular-dist
          path: dist/

      - name: Configurar Credenciais AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Inicializar Terraform
        run: terraform init

      - name: Validar Terraform
        run: terraform validate

      - name: Aplicar Terraform
        run: terraform apply -auto-approve

      - name: Obter Nome do Bucket
        id: tf_outputs
        run: |
          echo "bucket_name=$(terraform output -raw frontend_bucket_name)" >> $GITHUB_OUTPUT

      - name: Fazer Deploy da Aplicação Angular para o S3
        run: |
          aws s3 sync dist/ s3://${{ steps.tf_outputs.outputs.bucket_name }} --delete
